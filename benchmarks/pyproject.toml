[project]
name = "semcs-benchmarks"
version = "0.6.1"
description = "Comprehensive benchmark suite for cs --hybrid semantic code search"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT OR Apache-2.0" }
authors = [
    { name = "semcs contributors" }
]
keywords = ["code-search", "semantic-search", "benchmark", "coding-agents", "embeddings"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
]
viz = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/lwyBZss8924d/semcs"
Repository = "https://github.com/lwyBZss8924d/semcs"
Documentation = "https://github.com/lwyBZss8924d/semcs/tree/main/benchmarks"
Issues = "https://github.com/lwyBZss8924d/semcs/issues"

[project.scripts]
cs-benchmark = "automation.test_runner:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["quantitative", "real_world", "automation"]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=. --cov-report=term-missing"
